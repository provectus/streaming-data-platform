AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Kinesis ingestion test
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General Configuration
      Parameters:
      - S3BucketName
      - OutputStreamName
      - ShardCount
    ParameterLabels:
    - S3BucketName:
        default: Name of S3 bucket
    - OutputStreamName:
        default: A name of the output Kinesis stream
    - ShardCount:
        default: Number of Kinesis streams shards
Parameters:
  S3BucketName:
    AllowedPattern: ^[-a-zA-Z0-9]{4,61}$
    ConstraintDescription: Bucket name must not contain uppercase characters or underscores
    Default: fdsbucket
    Type: String
  OutputStreamName:
    AllowedPattern: ^[-a-zA-Z0-9_]{4,61}$
    ConstraintDescription: Should be a valid Kinesis topic name
    Default: locations
    Type: String
  ShardCount:
    Default: 2
    Type: Number
Rules:
  RegionSupport:
    Assertions:
    - Assert:
        Fn::Contains:
        - - us-east-1
          - us-east-2
          - us-west-2
          - eu-west-1
          - eu-central-1
        - Ref: AWS::Region
      AssertDescription: This stack is only available in the US East (N. Virginia,
        Ohio), US West (Oregon), EU (Ireland and Frankfurt) regions. Please launch
        the stack in one of these regions to continue.
Resources:
  OutputStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name:
        Fn::Sub: ${OutputStreamName}
      ShardCount:
        Ref: ShardCount
  S3Bucket:
    Type: AWS::S3::Bucket
    DependsOn:
    - LambdaInvokePermission
    Properties:
      BucketName:
        Ref: S3BucketName
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function:
            Fn::GetAtt:
            - LocationsIngestionLambda
            - Arn
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - LocationsIngestionLambda
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
  LocationsIngestionLambda:
    Type: AWS::Serverless::Function
    DependsOn: LambdaExecutionRole
    Properties:
      CodeUri: s3://locations-ingestion-artifacts/4c0b6eb81e058362a7aa1b90d8fbe38b
      FunctionName: LocationFileHandler
      Handler: com.provectus.fds.ingestion.LocationFileHandler
      MemorySize: 256
      Timeout: 180
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: java8
      Environment:
        Variables:
          STREAM_NAME:
            Ref: OutputStreamName
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: KinesisAccessPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Sid: KinesisAccessPolicy
            Effect: Allow
            Action:
            - kinesis:DescribeStream
            - kinesis:PutRecord
            - kinesis:ListStreams
            - kinesis:PutRecords
            Resource:
              Fn::GetAtt:
              - OutputStream
              - Arn
          - Effect: Allow
            Sid: S3BucketAccessPolicy
            Action:
            - s3:ListBucket
            - s3:GetObject
            - s3:GetObjectVersion
            Resource:
            - Fn::Sub: arn:aws:s3:::${S3BucketName}
            - Fn::Sub: arn:aws:s3:::${S3BucketName}/*
          - Effect: Allow
            Sid: LogsAccessPolicy
            Action: logs:*
            Resource: arn:aws:logs:*:*:*
