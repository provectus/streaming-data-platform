AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Streaming Data Platform, fast and safe way for data streaming
Metadata:
  Authors:
    Description: German Osin (gosin@provectus.com), Rustam Gimadiev (rgimadiev@provectus.com), Andrew Saushkin (asaushkin@provectus.com), Astamur Kirillin (akirillin@provectus.com)
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters:
          - ServicePrefix
          - S3ResourceBucket
    ParameterLabels:
      - ServicePrefix:
          default: Prefix for all entities
      - AnalyticalDBName:
          default: Name for all databases
      - S3BucketName:
          default: Name of S3 bucket
      - S3ResourceBucket:
          default: Name of an auxiliary S3 bucket
      - BufInterval:
          default: Buffering interval
      - BufSize:
          default: Buffering size
      - ShardCount:
          default: Number of Kinesis streams shards
      - SourceStreamName:
          default: A name of the input Kinesis stream
      - SinkAggregateStreamName:
          default: A name of the aggregates Kinesis stream
      - SinkBidStreamName:
          default: A name of the bids Kinesis stream
      - SinkImpressionStreamName:
          default: A name of the impressions Kinesis stream
      - SinkClickStreamName:
          default: A name of the clicks Kinesis stream
      - SinkWalkinClickStreamName:
          default: A name of the walkins Kinesis stream
      - SinkWalkinClickStreamName:
          default: A name of the walkin clicks Kinesis stream
      - LocationStreamName:
          default: A name of the locations Kinesis stream
      - AggregationPeriod:
          default: Period of triggering aggreation function
      - BidsSessionTimeout:
          default: Session length (in minutes) for joing bids with impressions
      - ClicksSessionTimeout:
          default: Session length (in minutes) for joing impressions with clicks
      - LocationsSessionTimeout:
          default: Session length (in minutes) for joing locations with clicks and impressions
      - LogLevel:
          default: Default log level in lamdas
Parameters:
  ServicePrefix:
    AllowedPattern: '^[-a-zA-Z0-9]{4,61}$'
    ConstraintDescription: Prefix should be DNS compliant
    Default: testing
    Type: String
  S3ResourceBucket:
    AllowedPattern: '^[-a-zA-Z0-9]{4,61}$'
    ConstraintDescription: Bucket name must not contain uppercase characters or underscores
    Default: fds-lambda-java
    Type: String
Rules:
  RegionSupport:
    Assertions:
      - Assert:
          Fn::Contains:
            - - 'us-east-1'
              - 'us-east-2'
              - 'us-west-2'
              - 'eu-west-1'
              - 'eu-central-1'
            - !Ref 'AWS::Region'
        AssertDescription: This stack is only available in the US East (N. Virginia, Ohio), US West (Oregon), EU (Ireland and Frankfurt) regions. Please launch the stack in one of these regions to continue.
Resources:
  common:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './common.yaml'
      Parameters:
        ServicePrefix: !Ref ServicePrefix
        AnalyticalDBName: !Sub '${ServicePrefix}-db'
        S3BucketName: !Sub 'sdp-${ServicePrefix}-bucket'
        LocationStreamName: !Sub '${ServicePrefix}-locations'
  ml:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './ml.yaml'
      Parameters:
        ServicePrefix: !Ref ServicePrefix
        S3ResourceBucket: !Ref S3ResourceBucket
        S3BucketName:  !Sub 'sdp-${ServicePrefix}-bucket'
        AnalyticalDBName: !Sub '${ServicePrefix}-db'
        JsonToParquetLambdaArn: !GetAtt common.Outputs.JsonToParquetLambdaArn
        LocationsIngestionLambdaArn: !GetAtt common.Outputs.LocationsIngestionLambdaArn
  processing:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './processing.yaml'
      Parameters:
        ServicePrefix: !Ref ServicePrefix
        S3ResourceBucket: !Ref S3ResourceBucket
        AnalyticalDBName: !Sub '${ServicePrefix}-db'
        LocationStreamName: 'locations'
        S3BucketName: !GetAtt ml.Outputs.S3BucketName
  injection:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './injection.yaml'
      Parameters:
          ServicePrefix: !Ref ServicePrefix
          BcnStreamName: !Sub '${ServicePrefix}-bcns'
          LocationStreamName: !Sub '${ServicePrefix}-locations'
  reporting:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './reporting.yaml'
      Parameters:
        ServicePrefix: !Ref ServicePrefix
        AggregationDynamoTableName: !GetAtt processing.Outputs.AggregationDynamoTableName 
